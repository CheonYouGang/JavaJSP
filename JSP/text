404 not fonud가 나올경우
 1) jsp파일의 <form action="/JSP/adder">의 경로와
    web.xml의 <url-pattern>/adder</url-pattern>의
    최종 경로가 다르면 서버 파일을 불러오지 못하는 오류가 난다.(지금은 맞음)
==========================================================================================================================

==========================================================================================================================
//날짜 만들기
	SimpleDateFormat simpleDateFormat
		= new SimpleDateFormat("yyyy.MM.dd HH:mm:ss", Locale.KOREA);
	Date date = new Date();
	String time = simpleDateFormat.format(date);
//날짜 만들기
==========================================================================================================================

==========================================================================================================================
//파일에 데이터를 쓸 수 없습니다. 가 나오는 경우(catch)
	*result값이 한글일 경우 먹히질 않는다.
	그러니 영어로 써야한다.
	
	ex) result = "Success";
		str.equals("Success")의
//파일에 데이터를 쓸 수 없습니다. 가 나오는 경우(catch)
==========================================================================================================================

==========================================================================================================================
//String filePath의 값이 디버깅에서 null이 나오는 경우
	파일 이름중에서 :, / 등은 저장할 수가 없다.(파일에 쓸 수 없는 특수 문자를 쓰는 것이불가능)
==========================================================================================================================
	//날짜 만들기
		SimpleDateFormat simpleDateFormat
			= new SimpleDateFormat("yyyy.MM.dd HH.mm.ss", Locale.KOREA);
		Date date = new Date();
		String time = simpleDateFormat.format(date);
		//날짜 만들기
		
		String filename = time + ".txt"; 								//.txt로 확장자
		
		PrintWriter writer = null;
		
		try{
			String filePath = 
				application.getRealPath("/WEB-INF/bbs/" + filename);	// filename 안붙여주면 데이터 쓸수 없음
				
				...
==========================================================================================================================
		SimpleDateFormat simpleDateFormat
			= new SimpleDateFormat("yyyy.MM.dd HH.mm.ss", Locale.KOREA);
		의 ""안에 :이나 /같은 것이 없어야 한다.
//String filePath의 값이 디버깅에서 null이 나오는 경우
==========================================================================================================================

==========================================================================================================================
RequestDispatcher: 현재 request에 담긴 정보를 저장하고있다가
	그 다음 페이지 그 다음페이지에도 해당 정보를 볼 수있게 계속 저장하는 기능
==========================================================================================================================

==========================================================================================================================
	쿠키 지정시 도메인 다음에setPath넣야함.
	
	Cookie cookie = new Cookie("Job", "Programmer");
	cookie.setDomain(".kosea.com");//it.cosea.com, jp.kosea.com
	cookie.setPath("/JSP/chap04/sub1/");
	response.addCookie(cookie);
==========================================================================================================================

==========================================================================================================================
	서블렛 사용시 다른 패키지안에 있을 시
	<servlet-class> 안에는
	패키지명.서블릿파일이름
	이어야 한다.
	
  <servlet>
  	<servlet-name>Divider-Servlet</servlet-name>
  	<servlet-class>chap05.DividerServlet</servlet-class>	
  </servlet>
  <servlet-mapping>
  	<servlet-name>Divider-Servlet</servlet-name>
  	<url-pattern>/divider</url-pattern>
  </servlet-mapping>
==========================================================================================================================

==========================================================================================================================
jsp

ex)
<form action="/JSP/chap06/greeting" method="get">
<url-pattern>/chap06/greeting</url-pattern>

과 같이 해당 html파일의 action과 xml파일의 <url-pattern>이 같아야 한다.
*여기서 'JSP'는 프로젝트 파일 이름이므로 꼭 들어가야한다.
==========================================================================================================================

==========================================================================================================================
삼항연산자
						조건						 ? 참 :	거짓
String name = (request.getParameter("Name") == null) ? "" : request.getParameter("Name");
==========================================================================================================================

==========================================================================================================================
run실행시 view.jsp파일이 아닌 정보를 입력하고 연산을 넣었던 jsp에서 실행해야 값이 보여진다
==========================================================================================================================

==========================================================================================================================
${param.값}			  : 웹 브라우저로부터 입력된 데이터 집합
	주소값에 입력시 <!-- ex> http://localhost:8080/JSP/chap07/Operator.jsp?값1=10&값2=2 -->
	해야 param.값이 적용
${paramValues.배열[]} : 웹 브라우저로부터 입력된 데이터 집합(똑같은 이름의 데이터가 여럿일때)
	ex)<input name="Animal">이 여러개라든가.
==========================================================================================================================

==========================================================================================================================
tid) uri - WEB-INF 파일은 외부에선 읽을 수가 없으므로 uri경로를 지정할 시 해당 폴더 이름을 넣는다.
ex) <%@ taglib prefix="m" uri="http://localhost:8080/JSP/chap07/math-function.tld" %>
==========================================================================================================================

==========================================================================================================================
web.xml <taglib> 오류
<jsp-config>태그 안에 넣으면 오류 해결
==========================================================================================================================

==========================================================================================================================
<jsp:useBean class="chap08.PersonInfo" id="pinfo" /> 사용시
 클래스 파일을 만들었음에도 클래스가 만들어지지 않는 경우
 
 메뉴 줄 상단에 Project -> Build Automatically 체크
 클래스 자동 생성
==========================================================================================================================

==========================================================================================================================
colspan="" 열 병합(<td>에 적용하면 그 내에 있는 열의 갯수만큼 병합) : <td colspan="3"></td>일 경우 한 행의 3개의 열을 병합
==========================================================================================================================

==========================================================================================================================
<jsp:scriptlet></jsp:scriptlet> == <% %>
<jsp:expression></jsp:expression> == ${EL태그)
<jsp:declaration></jsp:declaration> == <%!       %>
==========================================================================================================================

==========================================================================================================================
<input type="text" name="name">
의 name부분은 반드시 getter/setter가 있는 클래스의 변수가 맞게 들어갔나 확인하자
name=""의 ""안에는 getter/setter가 있는 클래스의 변수 이름이 들어가기 때문.
==========================================================================================================================

==========================================================================================================================
<jsp:useBean> 태그를

<jsp:useBean> 
<jsp:getProperty name="useBean의 id값" property="useBean의 참조 클래스의 변수">
<jsp:useBean/>
식으로 둘 경우 getProperty값을 받지 못할 수가 있다.
그러니
 <jsp:useBean class="받을 get,setter클래스" id="사용할 id값" scope="request" />
 <jsp:getProperty name="useBean의 id값" property="useBean의 참조 클래스의 변수">
 <jsp:getProperty name="useBean의 id값" property="useBean의 참조 클래스의 변수">...
식으로 놔둬야 프로퍼티 값을 읽을 수 있다.
==========================================================================================================================

==========================================================================================================================
프로퍼티 설치 주소 help->install
http://propedit.sourceforge.jp/eclipse/updates
==========================================================================================================================

==========================================================================================================================
sql값의 결과가 ???일 경우 해결방법
ProgramData(숨김폴더) 안에 my.ini 파일의 값을 수정해야 한다.
1) default-character-set=
2) character-set-server=
의 값을 utf8로 바꿔준 다음 재시작해야한다.
==========================================================================================================================

==========================================================================================================================
String url =
 "jdbc:mysql://localhost:3306/webdb?";	
의 ?뒤의 값은
프로젝트에 따라 다르다.(utf8 적용 법)

<xml의 경우>
useUnicode=true&amp;characterEncoding=utf8
<jsp 프로젝트의 경우>
useUnicode=true&characterEncoding=utf8 
==========================================================================================================================

==========================================================================================================================
서버란의 servers의 tomcat localhost클릭 후 modules의 path경로 확인. 
==========================================================================================================================
